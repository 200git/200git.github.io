<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title><![CDATA[一条二哈给我带来的思考]]></title>
      <url>/2023/07/18/%E4%B8%80%E6%9D%A1%E4%BA%8C%E5%93%88%E7%BB%99%E6%88%91%E5%B8%A6%E6%9D%A5%E7%9A%84%E6%80%9D%E8%80%83/</url>
      <content type="html"><![CDATA[<p>在我高二闲暇之余，偶然在b站的一篇专栏（来自帆雨动画）中发现了一个很有趣的问题，以一只二哈为引题，叫“二哈问题”，很好玩的名字，具体是这么描述的:</p>
<blockquote>
<p>...</p>
<p>我问：“假期里你没有什么任务吗？”</p>
<p>他说：“有啊，就是出一个数学和物理结合起来的题目，没想好呢还，你有什么主意吗？”</p>
<p>这时，他的二哈正叼着个棒球跑了回来，放在主人跟前，等着再一次抛球。</p>
<p>我说：“求一下二哈轨迹不就行了嘛！”</p>
<p>“这忒简单了罢，不就直线么，送分也不能这么送的！”</p>
<p>“你先往前扔出去，等它捡到球了你就往左边跑。”</p>
<p>二哈叼起球后看见主人在奔跑，显得更欢快了，迅速跑向主人。</p>
<p>在奔跑过程中，它一直在调整方向，以保持始终朝着主人跑...</p>
</blockquote>
<p>追及问题，不过变成二维了，那就很有意思了啊，当时就决定研究这个问题的结果。
无奈自己头脑不够，当时并不会熟练运用微积分思想，所以只能程序逼近计算，但是这一前提少不了假想：</p>
<p>不妨设想追击时间t和人狗速率差有关，且一定成反比，即：</p>
<p><span class="math display">\[a=\frac{k}{v_1-v_2}\]</span></p>
<p>以后施工。</p>
<h2 id="二维轨迹">二维轨迹</h2>
<p>让我们回顾一下二哈问题：</p>
<p><strong>一人一狗在同一位置（近似为一点）人手里有棒球，向前投出，棒球落地狗去捡，当狗捡到棒球瞬间（记当前人狗距离为L，随后人开始垂直于初始点到狗的连线跑（也是往正左或正右跑）速度为
<span class="math inline">\(v_2\)</span> 不变，狗立即追人，速率为 <span
class="math inline">\(v_1\)</span>，方向时刻指向人（即人狗连线在狗轨迹切线上），且<span
class="math inline">\(\vert v_1\vert&gt;\vert
v_2\vert\)</span>，试问：</strong></p>
<p><strong>（1）狗追上人的时间 <span
class="math inline">\(t\)</span>；</strong></p>
<p><strong>（2）狗的轨迹方程。</strong></p>
<p>我们来计算第二问： 涉及到狗的轨迹方程，我们不妨设狗在某一时刻的坐标为
<span
class="math inline">\((x,y)\)</span>，因为任意时刻人都在狗在这一点对其轨迹方程的切线上，故我们不难得出人的位置为
<span class="math inline">\((0,y-xy&#39;)\)</span>。
我们从题目中可以知道<span class="math inline">\(\vert v_1\vert&gt;\vert
v_2\vert\)</span>，故我们设：</p>
<p><span class="math display">\[v_1=nv_2\]</span></p>
<p>因为速率不变，故路程也应满足：</p>
<p><span class="math display">\[s_1=ns_2\]</span></p>
<p>引入弧微分 <span class="math inline">\(\mathrm{d}s\)</span>
，对于狗走过的路程有：</p>
<p><span
class="math display">\[\int_L^x\sqrt{(\mathrm{d}x)^2+(\mathrm{d}y)^2}\mathrm{d}x=n(y-xy&#39;)\]</span></p>
<p>两侧对 <span class="math inline">\(x\)</span> 求导得：</p>
<p><span
class="math display">\[\sqrt{1+(y&#39;)^2}=nxy&#39;&#39;\]</span></p>
<p>令 <span
class="math inline">\(Y=y&#39;=\frac{\mathrm{d}y}{\mathrm{d}x}\)</span>
，分离变量整理得：</p>
<p><span
class="math display">\[\frac{\mathrm{d}Y}{\sqrt{1+Y^2}}=\frac{\mathrm{d}x}{nx}\]</span></p>
<p>两侧积分得：</p>
<p><span class="math display">\[\ln\vert{Y+\sqrt{1+Y^2}}\vert=\frac
1n\ln\vert x\vert\]</span></p>
<p>第一步整理，去绝对值： 我们先考虑图中的情况，所以原式可化为：</p>
<p><span class="math display">\[\ln(Y+\sqrt{1+Y^2})=\frac 1n\ln
x\]</span></p>
<p>进一步化为：</p>
<p><span class="math display">\[Y+\sqrt{1+Y^2}=x^{\frac 1n}\]</span></p>
<p>最终得到：</p>
<p><span class="math display">\[Y=\pm\left(\frac{C_1}2x^{\frac 1n}-\frac
1{2C_1x^{\frac 1n}}\right)\]</span></p>
<p>我们取其中的正值，即：</p>
<p><span
class="math display">\[\frac{\mathrm{d}y}{\mathrm{d}x}=\frac{C_1}2
x^{\frac 1n}-\frac 1{2C_1x^{\frac 1n}}\]</span></p>
<p>当 <span class="math inline">\(y=0\)</span> 时，有 <span
class="math inline">\(x=L\)</span> ， <span
class="math inline">\(\frac{\mathrm{d}y}{\mathrm{d}x}=0\)</span>
，带入上式可得出：</p>
<p><span class="math display">\[ \frac{C_1}2 L^{\frac 1n}=\frac
1{2C_1L^{\frac 1n}}\]</span></p>
<p>即：</p>
<p><span class="math display">\[ C_1=L^{-\frac 1n}\]</span></p>
<p>最终带入原式得：</p>
<p><span class="math display">\[y=\frac{L^{-\frac 1n}}2\left(\frac
n{n+1}\right)x^{\frac{n+1}n}-\frac 1{2L^{-\frac 1n}}\left(\frac
n{n-1}\right)x^{\frac{n-1}n}+C_2\]</span></p>
<p>因为根据初值条件求解 <span class="math inline">\(C_2\)</span>
的结果很麻烦，故这里采取定义并直接带入：</p>
<p>当 <span class="math inline">\(y=0\)</span>，<span
class="math inline">\(x=L\)</span> 时，令 <span
class="math inline">\(F(x)=\frac{L^{-\frac 1n}}2\left(\frac
n{n+1}\right)x^{\frac{n+1}n}-\frac 1{2L^{-\frac 1n}}\left(\frac
n{n-1}\right)x^{\frac{n-1}n}+C_2\)</span> ，则有：</p>
<p><span class="math display">\[C_2=-F(b)\]</span></p>
<p>故最终的轨迹方程可以表示为：</p>
<p><span class="math display">\[\begin{cases}
F(x)=\frac{L^{-\frac 1n}}2\left(\frac n{n+1}\right)x^{\frac{n+1}n}-\frac
1{2L^{-\frac 1n}}\left(\frac n{n-1}\right)x^{\frac{n-1}n}+C_2\\
y=F(x)-F(b)\\
\end{cases}(n&gt;1)\]</span></p>
<h2 id="三维轨迹">三维轨迹</h2>
<p>先不写。</p>
]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[利用Hexo+GitHub+Cloudflare搭建静态网站]]></title>
      <url>/2023/07/14/%E5%88%A9%E7%94%A8Hexo-GitHub-Cloudflare%E6%90%AD%E5%BB%BA%E9%9D%99%E6%80%81%E7%BD%91%E7%AB%99/</url>
      <content type="html"><![CDATA[<blockquote class="blockquote-center">
以后的路上，不必强迫而顺然。
</blockquote>
<p>搭建一个属于自己的博客是我一直想做的，以前尝试直接用GitHub
Pages搭建，但是单纯访问readme文档都卡的要死，最近发现Hexo搭建的很方便，Cloudflare也能加速访问GitHub
Pages，自己在中间踩了很多坑，故写在这里防止其他人走不必要的弯路...</p>
<h2 id="准备工作">准备工作</h2>
<h3 id="hexo">Hexo</h3>
<p>Hexo是一款基于Node.js的静态博客框架，可以方便地生成静态网页挂载在GitHub和Heroku上，是搭建博客的首选框架，这里我们就选用Hexo来搭建。
需要准备的软件 <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Git: https://git-scm.com/</span><br><span class="line">Node.js: http://nodejs.cn/</span><br></pre></td></tr></table></figure> 准备在本地搭建博客的文件夹中右键选择"Git
bash here"，当然在地址栏中键入cmd也是可以的。 进入窗口后输入命令：
<figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ npm intstall hexo-cli -g</span><br><span class="line">$ hexo init blog</span><br><span class="line">$ <span class="built_in">cd</span> blog</span><br><span class="line">$ npm install</span><br><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>
完成以上工作后访问<code>http://localhost:4000</code>就能看到已经搭建的本地博客，其中主题为默认主题<code>landscape</code>。
你可以通过查询Hexo命令来进行文章发布的操作，也可以通过修改<code>_config.yml</code>来进行设置主题等操作，这些在官网都有相关文档。
### CloudFlare <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">CloudFlare官网:https://cloudflare.com/</span><br></pre></td></tr></table></figure>
Cloudflare能提供安全服务和加速代理，所以这里选用Cloudflare加速Github
Pages。 #### 获取Cloudflare账号 注册即可。</p>
<p>在Pages界面里绑定Github账号，设置对应库即可，免费版每天boundle访问次数有10w，作为静态网站（如个人博客）再合适不过。</p>
<h3 id="gitub-pages">Gitub Pages</h3>
<p>你肯定需要一个平台来承载你的静态网站内容，这里建议用GitHub而不是Gitee，虽然Gitee是国内服务器访问速度快，但是安全性无法保证，当然，你也可以考虑用<code>Gitee+Hexo</code>来构建你的个人网站。</p>
<p><strong>优点：免备案，搭建简单。缺点：访问慢，所以要加速，会繁琐一些。</strong>
#### 新建GitHub仓库
我们在完成Hexo的本地部署后，要连接Git以方便我们进行快速便捷地修改上传博客到Gitub上。我们要先在GitHub上新建一个库，库的名字为<strong>用户名</strong>.github.io（如200git.github.io）。
#### 将库和本地文件夹绑定
生成SSH-keys，首先检查ssh完整性，在本地任意文件夹位置处Git
bash，随后输入ssh以检查是否安装ssh，然后在命令框中输入： <figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ssh-keygen -t rsa -C &quot;注册Github时使用的邮件地址&quot;</span><br></pre></td></tr></table></figure>
然后<strong>敲四次回车。</strong>（有可能是三次，<del>我忘了。</del>）</p>
<p>随后输入： <figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ cat ~/.ssh/id_rsa.pub</span><br></pre></td></tr></table></figure> 并将输出内容复制到Github设置中的SSH
key框中，title无特殊要求可随意起名。注意<code>id_rsa</code>私钥不能泄露，而<code>id_rsa.pub</code>是公钥所以可以提供或分享。</p>
<p>最后测试ssh是否绑定成功： <figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ssh -T git@github.com</span><br></pre></td></tr></table></figure>
到这一步我们就完成了本地库和GitHub远程库绑定啦~</p>
<p>随后确定用户名和邮箱： <figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ git config --global user.name &quot;你的用户名&quot;</span><br><span class="line">$ git config --global user.email &quot;你的邮箱地址&quot;</span><br></pre></td></tr></table></figure>
然后在本地博客的文件夹下修改<code>_config.yml</code>，补充配置文件最后的<code>deploy</code>部分，具体内容如下：<strong>(留意冒号后边的空格！！没有空格会报错！！)</strong>
<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repository: 你刚才创建的Github地址</span><br><span class="line">  branch: main</span><br></pre></td></tr></table></figure> 修改配置文件保存后，在博客文件夹下Git
bash，安装<code>hexo-deployer-git</code>： <figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm intstall hexo-deployer-git --save</span><br></pre></td></tr></table></figure> 然后生成网页：
<figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo g</span><br></pre></td></tr></table></figure> 部署网页到GitHub远程库： <figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo d</span><br></pre></td></tr></table></figure>
然后我们就可以通过GitHub或者Cloudflare提供的多级地址来访问我们的静态网页啦~
<strong>（如果你遇到输入密码或者输入令牌的提示语句，你可以通过<del>查百度</del>的方法来解决，比我讲的细致多了）</strong>
### 域名（可选）
<strong>这可不是推销啊，域名的选择是自己决定的！！！</strong></p>
<p>使用GitHub或者Cloudflare所给的多级地址访问可能记起来过于繁琐（我的笨脑子应该记不下来），所以有一个便捷访问又具有个性的域名是一个不错的选择。
申请域名的地方很多很多，可以选择阿里云、腾讯云之类的，新用户还有优惠！（比如我这个域名zeratemi.fun一年也就9块钱，首年1.29元，而且fun也意为快乐~
^ ^</p>
<p>这里以腾讯云为例，腾讯云会分配免费的DNS来解析域名，但如果我们要使用Coudflare来代理加速我们的网页，我们就要用Cloudflare提供的名称服务器来作为DNS解析，而具体的设置流程，都能在对应官网找到解答办法，这里不多赘述。
<strong>修改名称服务器的审核可能需要一段时间，这和平台本身有关，但我估计最慢也不会超过1小时，当Cloudflare处检查名称服务器通过时，会发送邮件来提醒你名称服务器已经修改成功。并且再三强调，一定一定一定要等Cloudflare检查通过冒绿色对勾了再检查域名，否则再怎么看也是卡到host处。</strong></p>
<h3 id="博客文章">博客文章</h3>
<p>Hexo的文章使用的语言是轻量化标记语言Markdown，这种语言很好上手的，表现起来也很方便，教程网上都有，看一遍学会满足基本需求的部分就行。</p>
<p>放一首喜欢的歌，我觉得很好听。
<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width=530 height=86 src="//music.163.com/outchain/player?type=2&id=1847030625&auto=0&height=66"></iframe></p>
]]></content>
      
        
    </entry>
    
  
  
</search>
